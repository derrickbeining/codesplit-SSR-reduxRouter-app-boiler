/// Given two opacity values, animates an element between those opacity values.
/// @access public
/// @param {Number} $fade-from [0] - The beginning opacity value.
/// @param {Number} $fade-to [1] - The final opacity value.
/// @param {List} $animation-properties [1s ease] - The animation properties to apply.
/// @example scss - Usage
///   .foo {
///     @include fade(.8, .2, 3s linear);
///   }
/// @example css - Result
///   .foo {
///     -webkit-animation: fade-0-8-0-2 3s linear;
///     animation: fade-0-8-0-2 3s linear;
///   }
/// // (the @keyframes are also generated with a -webkit- vendor prefix)
///   @keyframes fade-0-8-0-2 {
///     from {
///       opacity: 0.8;
///       -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
///     }
///     to {
///       opacity: 0.2;
///       -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
///     }
///   }
@import './keyframes';
@import './opacity';
@import './prefix';
@import '../functions/_str-replace';

@mixin fade($fade-from: 0, $fade-to: 1, $animation-properties: 1s ease) {
  $alias: fade- + (str-replace($fade-from + '', '.', '-') + '-' + str-replace($fade-to + '', '.', '-'));
  @include keyframes($alias){
  from {
    @include opacity($fade-from);
  }
  to {
    @include opacity($fade-to);
  }
}
@include prefix(animation, $alias $animation-properties, 'webkit');
}
